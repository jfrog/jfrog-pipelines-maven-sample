template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: {{.Values.pipeline.name}}_GitRepo
    type: GitRepo
    configuration:
      gitProvider: {{.Values.repo.gitProvider}}
      path: {{.Values.repo.path}}
      branches:
        include: ^{{gitBranch}}$
      buildOn:
        commit: true
      cancelPendingRunsOn:
        newCommit: true

  - name: {{.Values.pipeline.name}}_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: {{.Values.artifactory}}
      buildName: ${JFROG_CLI_BUILD_NAME}
      buildNumber: ${JFROG_CLI_BUILD_NUMBER}

  - name: {{.Values.pipeline.name}}_Functions
    type: mvntest/Functions
    configuration:
      functions: all     

pipelines:
- name: {{.Values.pipeline.name}}_TEST
  configuration:
    retentionPolicy:
      maxAgeDays: 1
      minRuns: 10
    jfrogCliVersion: 2
    environmentVariables:
      readOnly:
        # Make sure to deploy the custom ext-build-info plugin:: see https://github.com/marvelution/ext-build-info/
        JFROG_CLI_PLUGINS_SERVER: {{.Values.artifactory}}
        JFROG_CLI_BUILD_NUMBER: ${run_id}
    runtime:
      type: image
      image:
        custom:
          name: releases-docker.jfrog.io/jfrog/pipelines-u20java
          tag: '8'
  steps:
  - name: build
    type: mvntest/MvnBuild
    configuration:
      mvnCommand: clean install
      resolverReleaseRepo: maven
      forceXrayScan: true
      failOnScan: {{eq "{{gitBranch}}" "master" }}
      autoPublishBuildInfo: true
      integrations:
      - name: {{.Values.artifactory}}
      - name: {{.Values.jira}}
      inputResources:
      - name: {{.Values.pipeline.name}}_Functions
      - name: {{.Values.pipeline.name}}_GitRepo
        trigger: false
      outputResources:
      - name: {{.Values.pipeline.name}}_BuildInfo
